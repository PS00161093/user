---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/users/{userId}/posts":
    post:
      tags:
        - user-controller
      operationId: createPost
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Post"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/users/":
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/User"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/users":
    get:
      tags:
        - user-controller
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/MappingJacksonValue"
  "/users/{id}":
    get:
      tags:
        - user-controller
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/EntityModelUser"
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  "/users/{id}/posts":
    get:
      tags:
        - user-controller
      operationId: getPostsByUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Post"
  "/hello-world":
    get:
      tags:
        - hello-world-controller
      operationId: helloWorld
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/hello-world-path-variable/{name}":
    get:
      tags:
        - hello-world-controller
      operationId: helloWorld_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/HelloWorldBean"
  "/hello-world-i18n":
    get:
      tags:
        - hello-world-controller
      operationId: helloWorldI18n
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/hello-world-bean":
    get:
      tags:
        - hello-world-controller
      operationId: helloWorldBean
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/HelloWorldBean"
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int32
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        birthDate:
          type: string
          format: date-time
        posts:
          type: array
          items:
            "$ref": "#/components/schemas/Post"
    FilterProvider:
      type: object
    MappingJacksonValue:
      type: object
      properties:
        value:
          type: object
        filters:
          "$ref": "#/components/schemas/FilterProvider"
    EntityModelUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        birthDate:
          type: string
          format: date-time
        posts:
          type: array
          items:
            "$ref": "#/components/schemas/Post"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
    Link:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
    HelloWorldBean:
      type: object
      properties:
        message:
          type: string
